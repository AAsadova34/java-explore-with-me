{
	"info": {
		"_postman_id": "48ccb1f5-ec88-473e-bc45-960428bed746",
		"name": "Comment_ewm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23407013"
	},
	"item": [
		{
			"name": "Добавить категорию(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create category\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Category_1');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Category_1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить пользователя(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test create user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user_1@user.com');\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('user_1');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user_1@user.com\",\r\n    \"name\": \"user_1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить пользователя(id2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test create user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(64);\r",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user_2@user.com');\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('user_2');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user_2@user.com\",\r\n    \"name\": \"user_2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий к несуществующему событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Invalid comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "100"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить событие(id1), инициатор(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.category.id, '\"category.id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PENDING');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Event_1. Sed similique exercitationem voluptas occaecati pariatur. Sint fugiat blanditiis ex iusto sint porro. Vel consequuntur ut totam quo.\",\r\n    \"category\": \"55\",\r\n    \"description\": \"Event_1. Deleniti et sunt consequuntur animi quod ea cupiditate. Dolorem rerum impedit occaecati quo mollitia magni iusto. Et molestiae voluptatum fugit repellendus quo assumenda enim ipsum culpa.\\n \\rVoluptatum alias aut ea molestiae. Odio vitae et eos qui nemo. Aspernatur minima architecto animi animi odio atque.\\n \\rEos ut quae ex nihil vero dolorem fuga ex. Magni doloribus reprehenderit. Ullam est quaerat ut dolor et. Veritatis voluptates voluptatem tempore blanditiis est. Qui minima harum distinctio est aut eos ut consequatur veniam. Quibusdam nihil accusamus.\",\r\n    \"eventDate\" : \"2035-03-07 20:17:46\",\r\n    \"location\": {\r\n        \"lat\": -59.3985,\r\n        \"lon\": -113.1142\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 0,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Event_1. Qui quo aut.\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить событие(id2), инициатор(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(39);\r",
							"    pm.expect(jsonData.category.id, '\"category.id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PENDING');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Event_2. Sed similique exercitationem voluptas occaecati pariatur. Sint fugiat blanditiis ex iusto sint porro. Vel consequuntur ut totam quo.\",\r\n    \"category\": \"55\",\r\n    \"description\": \"Event_2. Deleniti et sunt consequuntur animi quod ea cupiditate. Dolorem rerum impedit occaecati quo mollitia magni iusto. Et molestiae voluptatum fugit repellendus quo assumenda enim ipsum culpa.\\n \\rVoluptatum alias aut ea molestiae. Odio vitae et eos qui nemo. Aspernatur minima architecto animi animi odio atque.\\n \\rEos ut quae ex nihil vero dolorem fuga ex. Magni doloribus reprehenderit. Ullam est quaerat ut dolor et. Veritatis voluptates voluptatem tempore blanditiis est. Qui minima harum distinctio est aut eos ut consequatur veniam. Quibusdam nihil accusamus.\",\r\n    \"eventDate\" : \"2035-03-07 20:17:46\",\r\n    \"location\": {\r\n        \"lat\": -59.3985,\r\n        \"lon\": -113.1142\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 0,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Event_2. Qui quo aut.\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий от несуществующего автора",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_1.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий к неопубликованному событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Invalid comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Опубликовать событие(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test update event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.category.id, '\"category.id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Sed similique exercitationem voluptas occaecati pariatur. Sint fugiat blanditiis ex iusto sint porro. Vel consequuntur ut totam quo.\",\r\n    \"category\": \"55\",\r\n    \"description\": \"Deleniti et sunt consequuntur animi quod ea cupiditate. Dolorem rerum impedit occaecati quo mollitia magni iusto. Et molestiae voluptatum fugit repellendus quo assumenda enim ipsum culpa.\\n \\rVoluptatum alias aut ea molestiae. Odio vitae et eos qui nemo. Aspernatur minima architecto animi animi odio atque.\\n \\rEos ut quae ex nihil vero dolorem fuga ex. Magni doloribus reprehenderit. Ullam est quaerat ut dolor et. Veritatis voluptates voluptatem tempore blanditiis est. Qui minima harum distinctio est aut eos ut consequatur veniam. Quibusdam nihil accusamus.\",\r\n    \"eventDate\" : \"2035-03-07 20:17:46\",\r\n    \"location\": {\r\n        \"lat\": -59.3985,\r\n        \"lon\": -113.1142\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 0,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"PUBLISH_EVENT\",\r\n    \"title\": \"Qui quo aut.\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Опубликовать событие(id2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test update event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(39);\r",
							"    pm.expect(jsonData.category.id, '\"category.id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Event_2. Sed similique exercitationem voluptas occaecati pariatur. Sint fugiat blanditiis ex iusto sint porro. Vel consequuntur ut totam quo.\",\r\n    \"category\": \"55\",\r\n    \"description\": \"Event_2. Deleniti et sunt consequuntur animi quod ea cupiditate. Dolorem rerum impedit occaecati quo mollitia magni iusto. Et molestiae voluptatum fugit repellendus quo assumenda enim ipsum culpa.\\n \\rVoluptatum alias aut ea molestiae. Odio vitae et eos qui nemo. Aspernatur minima architecto animi animi odio atque.\\n \\rEos ut quae ex nihil vero dolorem fuga ex. Magni doloribus reprehenderit. Ullam est quaerat ut dolor et. Veritatis voluptates voluptatem tempore blanditiis est. Qui minima harum distinctio est aut eos ut consequatur veniam. Quibusdam nihil accusamus.\",\r\n    \"eventDate\" : \"2035-03-07 20:17:46\",\r\n    \"location\": {\r\n        \"lat\": -59.3985,\r\n        \"lon\": -113.1142\r\n    },\r\n    \"paid\": false,\r\n    \"participantLimit\": 0,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"PUBLISH_EVENT\",\r\n    \"title\": \"Event_2. Qui quo aut.\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "39"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий к событию(id1), автор(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_1.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_1.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий к событию(id2), автор(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(39);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_2.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=39",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "39"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить комментарий к событию(id1), автор(id2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(3);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(64);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_3.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_3.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Редактировать чужой комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Update event comment_1.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Редактировать комментарий к событию(id1), автор(id1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test update comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Update event comment_1.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(true);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Update event comment_1.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить все комментарии пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test get comments by user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(1);\r",
							"\r",
							"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить все комментарии к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test get comments by user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(3);\r",
							"    pm.expect(jsonData[1].id, 'result[0]: \"id\" field').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/:id/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id",
						"comments"
					],
					"variable": [
						{
							"key": "id",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удалить чужой комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "commentId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удалить свой комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						},
						{
							"key": "commentId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удалить комментарий от имени администратора",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дублирующий комментарий(id4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(4);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_2.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дублирующий комментарий(id5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(5);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_2.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дублирующий комментарий(id6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(6);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_2.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дублирующий комментарий(id7)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(7);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Event comment_2.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дубликат комментария - 409",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Event comment_2.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить уникальный комментарий(id8)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test create comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(8);\r",
							"    pm.expect(jsonData.event.id, '\"event.id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.user.id, '\"user.id\" field').to.eql(63);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Unicum event comment.');\r",
							"    pm.expect(jsonData.redaction, '\"redaction\" field').to.eql(false);\r",
							"    pm.expect(jsonData.created, '\"created\" field').is.not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Unicum event comment.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments?eventId=38",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "38"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить все комментарии пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test get comments by user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}